/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Order;
import io.swagger.model.Receipt;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-10T09:06:43.535Z")

@Api(value = "receipt", description = "the receipt API")
public interface ReceiptApi {

    @ApiOperation(value = "post a receipt", nickname = "addReceiptPost", notes = "post a receipt", response = Object.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully posted the receipt", response = Object.class),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/receipt",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<Receipt> addReceiptPost(@ApiParam(value = "", required = true) @Valid @RequestBody Receipt body);


    @ApiOperation(value = "put a receipt", nickname = "addReceiptPut", notes = "put a receipt", response = Object.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully put the receipt", response = Object.class),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/receipt",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.PUT)
    ResponseEntity<Receipt> addReceiptPut(@ApiParam(value = "", required = true) @Valid @RequestBody Receipt body);


    @ApiOperation(value = "delete all receipts", nickname = "deleteAllReceipts", notes = "delete all receipts in the database", tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully deleted all receipts"),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/receipt",
            method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteAllReceipts();


    @ApiOperation(value = "delete receipt by ID", nickname = "deleteReceiptById", notes = "delete specific receipt by id", response = Receipt.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful deleted receipt by it's id", response = Receipt.class),
            @ApiResponse(code = 400, message = "bad input, bad parameters")})
    @RequestMapping(value = "/receipt/{receiptId}",
            produces = {"application/json"},
            method = RequestMethod.DELETE)
    ResponseEntity<Receipt> deleteReceiptById(@ApiParam(value = "reciptId", required = true) @PathVariable("receiptId") String receiptId);


    @ApiOperation(value = "get all receipts", nickname = "getAllReceipts", notes = "get all receipts", response = Receipt.class, responseContainer = "List", tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully returned all the receipts", response = Receipt.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/receipt",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<Receipt>> getAllReceipts();


    @ApiOperation(value = "Get receipt by ID", nickname = "getReceiptById", notes = "return the receipt by id", response = Receipt.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Receipt.class),
            @ApiResponse(code = 400, message = "bad input, bad parameters")})
    @RequestMapping(value = "/receipt/{receiptId}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<Receipt> getReceiptById(@ApiParam(value = "reciptId", required = true) @PathVariable("receiptId") String receiptId);

    @ApiOperation(value = "Get order by ID and receipt by ID", nickname = "getOrderbyIDandReceiptById", notes = "return the receipt by id", response = Receipt.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Receipt.class),
            @ApiResponse(code = 400, message = "bad input, bad parameters")})
    @RequestMapping(value = "/receipt/{receiptId}/order/{orderId}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<Order> getOrderbyIDandReceiptById(@ApiParam(value = "reciptId", required = true) @PathVariable("receiptId") String receiptId, @ApiParam(value = "orderId", required = true) @PathVariable("orderId") String orderId);

    @ApiOperation(value = "Get order by ID and receipt by ID", nickname = "getOrderbyIDandReceiptById", notes = "return the receipt by id", response = Receipt.class, tags = {"Receipt",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Receipt.class),
            @ApiResponse(code = 400, message = "bad input, bad parameters")})
    @RequestMapping(value = "/receipt/{receiptId}/order/{orderId}",
            produces = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<Receipt> postOrderbyIDandReceiptById(@ApiParam(value = "reciptId", required = true) @PathVariable("receiptId") String receiptId, @ApiParam(value = "orderId", required = true) @PathVariable("orderId") String orderId);
}
