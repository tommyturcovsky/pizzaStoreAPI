/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;


import io.swagger.model.MenuItem;
import io.swagger.model.Pizza;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;


@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-11T01:01:57.885Z")


@Api(value = "pizza", description = "the pizza API")
public interface PizzaApi {

    @ApiOperation(value = "creates pizza object", nickname = "createPizza", notes = "", tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "successful creation of a pizza object"),
            @ApiResponse(code = 400, message = "Invalid pizzaId")})
    @RequestMapping(value = "/pizza",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<Pizza> createPizza(@ApiParam(value = "") @Valid @RequestBody Pizza pizza);


    @ApiOperation(value = "deletes the current pizza object", nickname = "deletePizzaByID", notes = "Deletes a pizza object by given ID", tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully deleted the pizza using pizzaID"),
            @ApiResponse(code = 400, message = "invalid pizzaId, object invalid")})
    @RequestMapping(value = "/pizza/{pizzaID}",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.DELETE)
    ResponseEntity<Void> deletePizzaByID(@ApiParam(value = "ID of the pizza", required = true) @PathVariable("pizzaID") String pizzaID);


    @ApiOperation(value = "list ALL pizza objects", nickname = "getAllPizzas", notes = "This all of the pizza objects", response = Pizza.class, responseContainer = "List", tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully returned all pizza objects", response = Pizza.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/pizza",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<Pizza>> getAllPizzas();


    @ApiOperation(value = "Get list of menuItems by pizzaID", nickname = "getMenuItemsByPizzaID", notes = "get list of menuItems for current pizza using pizzaID", response = MenuItem.class, responseContainer = "List", tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful returns a list of MenuItems of a pizza object", response = MenuItem.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "Invalid Pizza id")})
    @RequestMapping(value = "/pizza/{pizzaID}/menuItem",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<MenuItem>> getMenuItemsByPizzaID(@ApiParam(value = "the pizza Id", required = true) @PathVariable("pizzaID") String pizzaID);


    @ApiOperation(value = "get the current state of the pizza given specific Id", nickname = "getPizzaByID", notes = "Return the current state of the pizza object", response = Object.class, tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully retrieved pizza object", response = Pizza.class),
            @ApiResponse(code = 400, message = "Invalid pizza Id")})
    @RequestMapping(value = "/pizza/{pizzaID}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<Pizza> getPizzaByID(@ApiParam(value = "the pizza ID", required = true) @PathVariable("pizzaID") String pizzaID);


    @ApiOperation(value = "Updated MenuItem in a pizza", nickname = "updateMenuItemByIDAndPizzaID", notes = "This can only be done by the guest user ordering pizza.", response = Pizza.class, tags = {"Pizza",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "successfully returned all pizza objects with updated menuItems", response = Object.class),
            @ApiResponse(code = 400, message = "Invalid pizzaId")})
    @RequestMapping(value = "/pizza/{pizzaID}/menuItem/{menuItemID}",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.PUT)
    ResponseEntity<Pizza> updateMenuItemByIDAndPizzaID(@ApiParam(value = "pizzaID that needs to be updated", required = true) @PathVariable("pizzaID") String pizzaID, @ApiParam(value = "menuItem that is updated", required = true) @PathVariable("menuItemID") String menuItemID);

}
