/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.MenuItem;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-10T01:22:58.196Z")

@Api(value = "menuItem", description = "the menuItem API")
public interface MenuItemApi {

    @ApiOperation(value = "creates new menuItem object", nickname = "createMenuItem", notes = "", tags = {"MenuItem",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Successfully posted to database!"),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/menuItem",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MenuItem> createMenuItem(@ApiParam(value = "add menuItem object", required = true) @Valid @RequestBody MenuItem menuItem);


    @ApiOperation(value = "deletes menuItem object by id", nickname = "deleteMenuItemById", notes = "", tags = {"MenuItem",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successfully deleted menuItem from the database!"),
            @ApiResponse(code = 400, message = "bad input parameter, id is invalid")})
    @RequestMapping(value = "/menuItem/{menuItemID}",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteMenuItemById(@ApiParam(value = "ID of the menuItem", required = true) @PathVariable("menuItemID") String menuItemID);

    @ApiOperation(value = "list ALL menu items", nickname = "getMenuItems", notes = "This lists all of the menu items", response = MenuItem.class, responseContainer = "List", tags = {"MenuItem",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully returned list of all menu items", response = MenuItem.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "bad input parameter, object invalid")})
    @RequestMapping(value = "/menuItem",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<MenuItem>> getMenuItems();

    @ApiOperation(value = "get one menuItem object", nickname = "getMenuItemById", notes = "This gets one menuItem object", response = Object.class, tags = {"MenuItem",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successfully fetched menuItem by Id", response = Object.class),
            @ApiResponse(code = 400, message = "bad input parameter, id invalid")})
    @RequestMapping(value = "/menuItem/{menuItemID}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<MenuItem> getMenuItemById(@ApiParam(value = "ID of the menuItem", required = true) @PathVariable("menuItemID") String menuItemID);

}
